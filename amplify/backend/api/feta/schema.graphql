# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type ProfilePicture @model @auth(rules: [{allow: public}]) {
  id: ID!
  imageurl: String
  Profile: Profile @belongsTo
  profileID: String
}

type Profile @model @auth(rules: [{allow: public}]) {
  id: ID!
  email: String
  relation: String
  cognitoID: String
  usernameID: String
  Images: [Images] @hasMany(indexName: "byProfile", fields: ["id"])
  ImagePosts: ImagePost @belongsTo
  Username: Username @hasOne
  family_name: String
  profilepictureID: ID @index(name: "byProfilePicture")
  profilepicture: ProfilePicture @hasOne(fields: ["profilepictureID"])
}

type Images @model @auth(rules: [{allow: public}]) {
  id: ID!
  imageurl: String
  s3_key: String
  profileID: ID! @index(name: "byProfile")
  usernameID: ID! @index(name: "byUsername")
  username: Username @hasOne(fields: ["usernameID"])
  ImagePosts: ImagePost @belongsTo
  photoPath: String
}

type ImagePost @model @auth(rules: [{allow: public}]) {
  id: ID!
  description: String
  imagesID: ID! @index(name: "byImages")
  image: Images @hasOne(fields: ["imagesID"])
  time_posted: AWSDateTime
  likes: AWSJSON
  comments: AWSJSON
  usernameID: ID! @index(name: "byUsername")
  username: Username @hasOne(fields: ["usernameID"])
  profileID: ID! @index(name: "byProfile")
  profile: Profile @hasOne(fields: ["profileID"])
}

type Comments @model @auth(rules: [{allow: public}]) {
  id: ID!
  usernameID: String
  comment: String
  time_posted: AWSDateTime
  imagePostsID: String
}

type Username @model @auth(rules: [{allow: public}]) {
  id: ID!
  username: String
  profileID: String
  ImagePosts: ImagePost @belongsTo
  Images: Images @belongsTo
  Profile: Profile @belongsTo
}